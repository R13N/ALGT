Test/STFL.language --ifa equate --plain

Warning:
  While checking the totality of function "abstract":
    Following calls will fall through:
      abstract(("Bool" (type typeSet)))
      abstract(("Int" (type typeSet)))
  While checking the totality of function "equate":
    Following calls will fall through:
      equate(type, type)
  
  While checking that the functions do have the strictest possible types:
    "plus" can be typed as "Number", instead of a "number"

 Analysis of equate : type -> type -> type 
===========================================

    
     Analysis of clause 0 
    ......................
    
    Clause: 
      equate(T, T)             = T
    
    Possible inputs at this point: 
    #  (type, type)
    
    
    Possible results: 
    0   type(0) , type(0)         	--> type(0)         : "type"
    
    This clause uses equality in the patterns and might not match. No arguments are thus used in this abstract interpretation.
    
    
    
  
   Falthrough 
  ------------
  
  (type, type)
  
  
