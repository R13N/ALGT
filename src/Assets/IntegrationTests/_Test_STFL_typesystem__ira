Output {_files = [], _stdOut = ["Warning:","  While checking the totality of function \"cod\":","    Following calls will fall through:","      cod(\"Int\")","      cod(\"Bool\")","  While checking the totality of function \"dom\":","    Following calls will fall through:","      dom(\"Int\")","      dom(\"Bool\")","  While checking the totality of function \"eval\":","    Following calls will fall through:","      eval((\"(\" \"\\\\\" var \":\" type \".\" e \")\"))","  ","  While checking that the functions do have the strictest possible types:","    \"dom\" can be typed as \"typeL\", instead of a \"type\"",""," Analysis for rules about (::) ","===============================","","# (::) \t: e (in), type (out)\tPronounced as \"type in empty context\"","","# Known rules are","#   TEmptyCtx","","Applicable to:","  e","Results:","  e0 :: typeT","  \t where \"{}\" : typingEnvironment \8866 e0, typeT",""," Analysis of rule \"TEmptyCtx\" ","------------------------------","","Applicable to:","  e","Results:","  e0 :: typeT","  \t where \"{}\" : typingEnvironment \8866 e0, typeT","","",""," Analysis for rules about (==) ","===============================","","# (==) \t: type (in), type (in)\tPronounced as \"equals\"","","# Known rules are","#   EqBase","#   EqParL","#   EqParR","#   EqArrow","","Applicable to:","  type","  (\"(\" type \")\"), type","  type, (\"(\" type \")\")","  (typeL \"->\" type)","Results:","  type0 == type0","  (\"(\" : typeL type0:1 \")\" : typeL) : typeL == type1","  \t where (recursion) type0:1 == type1","  type0 == (\"(\" : typeL type1:1 \")\" : typeL) : typeL","  \t where (recursion) type0 == type1:1","  (typeL0:0 \"->\" : type type0:2) : type == (typeL1:0 \"->\" : type type1:2) : type","  \t where (recursion) typeL0:0 == typeL1:0, type0:2 == type1:2",""," Analysis of rule \"EqBase\" ","---------------------------","","Applicable to:","  type","Results:","  type0 == type0","","",""," Analysis of rule \"EqParL\" ","---------------------------","","Applicable to:","  (\"(\" type \")\"), type","Results:","  (\"(\" : typeL type0:1 \")\" : typeL) : typeL == type1","  \t where (recursion) type0:1 == type1","","",""," Analysis of rule \"EqParR\" ","---------------------------","","Applicable to:","  type, (\"(\" type \")\")","Results:","  type0 == (\"(\" : typeL type1:1 \")\" : typeL) : typeL","  \t where (recursion) type0 == type1:1","","",""," Analysis of rule \"EqArrow\" ","----------------------------","","Applicable to:","  (typeL \"->\" type)","Results:","  (typeL0:0 \"->\" : type type0:2) : type == (typeL1:0 \"->\" : type type1:2) : type","  \t where (recursion) typeL0:0 == typeL1:0, type0:2 == type1:2","","",""," Analysis for rules about (\8594) ","==============================","","# (\8594) \t: e (in), e (out)\tPronounced as \"evaluation\"","","# Known rules are","#   EvalCtx","#   EvalPlus","#   EvalAscrBool","#   EvalAscrInt","#   EvalAscrPar","#   EvalParens","#   EvalIfTrue","#   EvalIfFalse","#   EvalLamApp","","Applicable to:","  (eL \"+\" e)","  (eL \"::\" type)","  (eL e)","  (\"(\" \"\\\\\" var \":\" type \".\" e \")\")","  (\"If\" e \"Then\" e \"Else\" e)","  (\"(\" e \")\")","  (number \"+\" number)","  (bool \"::\" \"Bool\")","  (number \"::\" \"Int\")","  (eL \"::\" (\"(\" type \")\"))","  (\"If\" \"True\" \"Then\" e \"Else\" e)","  (\"If\" \"False\" \"Then\" e \"Else\" e)","  ((\"(\" \"\\\\\" var \":\" type \".\" e \")\") e)","Results:","  (eL0/0:0$ \"+\" : e e0/0:2) : e \8594 (ee1 \"+\" : e e0/0:2) : e","  \t where (recursion) eL0/0:0$ \8594 ee1","  (eL0/0:0 \"+\" : e e0/0:2$) : e \8594 (eL0/0:0 \"+\" : e ee1) : e","  \t where (recursion) e0/0:2$ \8594 ee1","  (eL0/1:0$ \"::\" : e type0/1:2) : e \8594 (ee1 \"::\" : e type0/1:2) : e","  \t where (recursion) eL0/1:0$ \8594 ee1","  (eL0/2:0$ e0/2:1) : e \8594 (ee1 e0/2:1) : e","  \t where (recursion) eL0/2:0$ \8594 ee1","  (eL0/2:0 e0/2:1$) : e \8594 (eL0/2:0 ee1) : e","  \t where (recursion) e0/2:1$ \8594 ee1","  (\"(\" : eL \"\\\\\" : eL var0/3/2:2 \":\" : eL type0/3/2:4 \".\" : eL e0/3/2:6$ \")\" : eL) : eL \8594 (\"(\" : eL \"\\\\\" : eL var0/3/2:2 \":\" : eL type0/3/2:4 \".\" : eL ee1 \")\" : eL) : eL","  \t where (recursion) e0/3/2:6$ \8594 ee1","  (\"If\" : eL e0/3/3:1$ \"Then\" : eL e0/3/3:3 \"Else\" : eL e0/3/3:5) : eL \8594 (\"If\" : eL ee1 \"Then\" : eL e0/3/3:3 \"Else\" : eL e0/3/3:5) : eL","  \t where (recursion) e0/3/3:1$ \8594 ee1","  (\"If\" : eL e0/3/3:1 \"Then\" : eL e0/3/3:3$ \"Else\" : eL e0/3/3:5) : eL \8594 (\"If\" : eL e0/3/3:1 \"Then\" : eL ee1 \"Else\" : eL e0/3/3:5) : eL","  \t where (recursion) e0/3/3:3$ \8594 ee1","  (\"If\" : eL e0/3/3:1 \"Then\" : eL e0/3/3:3 \"Else\" : eL e0/3/3:5$) : eL \8594 (\"If\" : eL e0/3/3:1 \"Then\" : eL e0/3/3:3 \"Else\" : eL ee1) : eL","  \t where (recursion) e0/3/3:5$ \8594 ee1","  (\"(\" : eL e0/3/4:1$ \")\" : eL) : eL \8594 (\"(\" : eL ee1 \")\" : eL) : eL","  \t where (recursion) e0/3/4:1$ \8594 ee1","  (number0:0 \"+\" : e number0:2) : e \8594 number (Function call - ID not retrievable)","  (bool0:0 \"::\" : e \"Bool\" : typeL) : e \8594 bool0:0","  (number0:0 \"::\" : e \"Int\" : typeL) : e \8594 number0:0","  (eL0:0 \"::\" : e (\"(\" : typeL type0:2:1 \")\" : typeL) : typeL) : e \8594 eL0:0","  \t where (recursion) (eL0:0 \"::\" : e type0:2:1) : e \8594 eL0:0","  (\"(\" : eL e0:1 \")\" : eL) : eL \8594 e0:1","  (\"If\" : eL \"True\" : bool \"Then\" : eL e0:3 \"Else\" : eL e0:5) : eL \8594 e0:3","  (\"If\" : eL \"False\" : bool \"Then\" : eL e0:3 \"Else\" : eL e0:5) : eL \8594 e0:5","  ((\"(\" : eL \"\\\\\" : eL var0:0:2 \":\" : eL type0:0:4 \".\" : eL e0:0:6 \")\" : eL) : eL e0:1) : e \8594 e (Function call - ID not retrievable)",""," Analysis of rule \"EvalCtx\" ","----------------------------","","Applicable to:","  (eL \"+\" e)","  (eL \"::\" type)","  (eL e)","  (\"(\" \"\\\\\" var \":\" type \".\" e \")\")","  (\"If\" e \"Then\" e \"Else\" e)","  (\"(\" e \")\")","Results:","  (eL0/0:0$ \"+\" : e e0/0:2) : e \8594 (ee1 \"+\" : e e0/0:2) : e","  \t where (recursion) eL0/0:0$ \8594 ee1","  (eL0/0:0 \"+\" : e e0/0:2$) : e \8594 (eL0/0:0 \"+\" : e ee1) : e","  \t where (recursion) e0/0:2$ \8594 ee1","  (eL0/1:0$ \"::\" : e type0/1:2) : e \8594 (ee1 \"::\" : e type0/1:2) : e","  \t where (recursion) eL0/1:0$ \8594 ee1","  (eL0/2:0$ e0/2:1) : e \8594 (ee1 e0/2:1) : e","  \t where (recursion) eL0/2:0$ \8594 ee1","  (eL0/2:0 e0/2:1$) : e \8594 (eL0/2:0 ee1) : e","  \t where (recursion) e0/2:1$ \8594 ee1","  (\"(\" : eL \"\\\\\" : eL var0/3/2:2 \":\" : eL type0/3/2:4 \".\" : eL e0/3/2:6$ \")\" : eL) : eL \8594 (\"(\" : eL \"\\\\\" : eL var0/3/2:2 \":\" : eL type0/3/2:4 \".\" : eL ee1 \")\" : eL) : eL","  \t where (recursion) e0/3/2:6$ \8594 ee1","  (\"If\" : eL e0/3/3:1$ \"Then\" : eL e0/3/3:3 \"Else\" : eL e0/3/3:5) : eL \8594 (\"If\" : eL ee1 \"Then\" : eL e0/3/3:3 \"Else\" : eL e0/3/3:5) : eL","  \t where (recursion) e0/3/3:1$ \8594 ee1","  (\"If\" : eL e0/3/3:1 \"Then\" : eL e0/3/3:3$ \"Else\" : eL e0/3/3:5) : eL \8594 (\"If\" : eL e0/3/3:1 \"Then\" : eL ee1 \"Else\" : eL e0/3/3:5) : eL","  \t where (recursion) e0/3/3:3$ \8594 ee1","  (\"If\" : eL e0/3/3:1 \"Then\" : eL e0/3/3:3 \"Else\" : eL e0/3/3:5$) : eL \8594 (\"If\" : eL e0/3/3:1 \"Then\" : eL e0/3/3:3 \"Else\" : eL ee1) : eL","  \t where (recursion) e0/3/3:5$ \8594 ee1","  (\"(\" : eL e0/3/4:1$ \")\" : eL) : eL \8594 (\"(\" : eL ee1 \")\" : eL) : eL","  \t where (recursion) e0/3/4:1$ \8594 ee1","","",""," Analysis of rule \"EvalPlus\" ","-----------------------------","","Applicable to:","  (number \"+\" number)","Results:","  (number0:0 \"+\" : e number0:2) : e \8594 number (Function call - ID not retrievable)","","",""," Analysis of rule \"EvalAscrBool\" ","---------------------------------","","Applicable to:","  (bool \"::\" \"Bool\")","Results:","  (bool0:0 \"::\" : e \"Bool\" : typeL) : e \8594 bool0:0","","",""," Analysis of rule \"EvalAscrInt\" ","--------------------------------","","Applicable to:","  (number \"::\" \"Int\")","Results:","  (number0:0 \"::\" : e \"Int\" : typeL) : e \8594 number0:0","","",""," Analysis of rule \"EvalAscrPar\" ","--------------------------------","","Applicable to:","  (eL \"::\" (\"(\" type \")\"))","Results:","  (eL0:0 \"::\" : e (\"(\" : typeL type0:2:1 \")\" : typeL) : typeL) : e \8594 eL0:0","  \t where (recursion) (eL0:0 \"::\" : e type0:2:1) : e \8594 eL0:0","","",""," Analysis of rule \"EvalParens\" ","-------------------------------","","Applicable to:","  (\"(\" e \")\")","Results:","  (\"(\" : eL e0:1 \")\" : eL) : eL \8594 e0:1","","",""," Analysis of rule \"EvalIfTrue\" ","-------------------------------","","Applicable to:","  (\"If\" \"True\" \"Then\" e \"Else\" e)","Results:","  (\"If\" : eL \"True\" : bool \"Then\" : eL e0:3 \"Else\" : eL e0:5) : eL \8594 e0:3","","",""," Analysis of rule \"EvalIfFalse\" ","--------------------------------","","Applicable to:","  (\"If\" \"False\" \"Then\" e \"Else\" e)","Results:","  (\"If\" : eL \"False\" : bool \"Then\" : eL e0:3 \"Else\" : eL e0:5) : eL \8594 e0:5","","",""," Analysis of rule \"EvalLamApp\" ","-------------------------------","","Applicable to:","  ((\"(\" \"\\\\\" var \":\" type \".\" e \")\") e)","Results:","  ((\"(\" : eL \"\\\\\" : eL var0:0:2 \":\" : eL type0:0:4 \".\" : eL e0:0:6 \")\" : eL) : eL e0:1) : e \8594 e (Function call - ID not retrievable)","","",""," Analysis for rules about (\8594*) ","===============================","","# (\8594*) \t: e (in), e (out)\tPronounced as \"big step\"","","# Known rules are","#   BigStepCanon","#   BigStepRec","#   BigStepBase","","Applicable to:","  e","Results:","  e0 \8594* e0","  \t where (\10003) e0","  e0 \8594* ee2","  \t where (recursion) e0 \8594 ee1, ee1 \8594* ee2","  e0 \8594* ee1","  \t where e0 \8594 ee1, (\10003) ee1",""," Analysis of rule \"BigStepCanon\" ","---------------------------------","","Applicable to:","  e","Results:","  e0 \8594* e0","  \t where (\10003) e0","","",""," Analysis of rule \"BigStepRec\" ","-------------------------------","","Applicable to:","  e","Results:","  e0 \8594* ee2","  \t where (recursion) e0 \8594 ee1, ee1 \8594* ee2","","",""," Analysis of rule \"BigStepBase\" ","--------------------------------","","Applicable to:","  e","Results:","  e0 \8594* ee1","  \t where e0 \8594 ee1, (\10003) ee1","","",""," Analysis for rules about (\8866) ","==============================","","# (\8866) \t: typingEnvironment (in), e (in), type (out)\tPronounced as \"context entails typing\"","","# Known rules are","#   Tnumber","#   Tbool","#   TParens","#   TAscr","#   Tx","#   TPlus","#   TIf","#   TLambda","#   Tapp","","Applicable to:","  typingEnvironment, number","  typingEnvironment, bool","  typingEnvironment, (\"(\" e \")\")","  typingEnvironment, (eL \"::\" type)","  typingEnvironment, (eL \"+\" e)","  typingEnvironment, (\"If\" e \"Then\" e \"Else\" e)","  typingEnvironment, (\"(\" \"\\\\\" var \":\" type \".\" e \")\")","  typingEnvironment, (eL e)","Results:","  typingEnvironment0 \8866 number1, \"Int\" : typeL","  typingEnvironment0 \8866 bool1, \"Bool\" : typeL","  typingEnvironment0 \8866 (\"(\" : eL e1:1 \")\" : eL) : eL, typeT","  \t where (recursion) typingEnvironment0 \8866 e1:1, typeT","  typingEnvironment0 \8866 (eL1:0 \"::\" : e type1:2) : e, typeT'","  \t where (recursion) typingEnvironment0 \8866 eL1:0, typeT', typeT' == type1:2","  typingEnvironment0 \8866 (eL1:0 \"+\" : e e1:2) : e, \"Int\" : typeL","  \t where (recursion) typingEnvironment0 \8866 eL1:0, \"Int\" : typeL, typingEnvironment0 \8866 e1:2, \"Int\" : typeL","  typingEnvironment0 \8866 (\"If\" : eL e1:1 \"Then\" : eL e1:3 \"Else\" : eL e1:5) : eL, typeTl","  \t where (recursion) typingEnvironment0 \8866 e1:1, \"Bool\" : typeL, typingEnvironment0 \8866 e1:3, typeTl, typingEnvironment0 \8866 e1:5, typeTr, typeTl == typeTr","  typingEnvironment0 \8866 (\"(\" : eL \"\\\\\" : eL var1:2 \":\" : eL type1:4 \".\" : eL e1:6 \")\" : eL) : eL, ((\"(\" : typeL type1:4 \")\" : typeL) : typeL \"->\" : type typeT2) : type","  \t where (recursion) ((var1:2 \":\" : typing type1:4) : typing \",\" : typingEnvironment typingEnvironment0) : typingEnvironment \8866 e1:6, typeT2","  typingEnvironment0 \8866 (eL1:0 e1:1) : e, type (Function call - ID not retrievable)","  \t where (recursion) typingEnvironment0 \8866 eL1:0, typeTfunc, typingEnvironment0 \8866 e1:1, typeTarg, typeTarg == type (Function call - ID not retrievable)",""," Analysis of rule \"Tnumber\" ","----------------------------","","Applicable to:","  typingEnvironment, number","Results:","  typingEnvironment0 \8866 number1, \"Int\" : typeL","","",""," Analysis of rule \"Tbool\" ","--------------------------","","Applicable to:","  typingEnvironment, bool","Results:","  typingEnvironment0 \8866 bool1, \"Bool\" : typeL","","",""," Analysis of rule \"TParens\" ","----------------------------","","Applicable to:","  typingEnvironment, (\"(\" e \")\")","Results:","  typingEnvironment0 \8866 (\"(\" : eL e1:1 \")\" : eL) : eL, typeT","  \t where (recursion) typingEnvironment0 \8866 e1:1, typeT","","",""," Analysis of rule \"TAscr\" ","--------------------------","","Applicable to:","  typingEnvironment, (eL \"::\" type)","Results:","  typingEnvironment0 \8866 (eL1:0 \"::\" : e type1:2) : e, typeT'","  \t where (recursion) typingEnvironment0 \8866 eL1:0, typeT', typeT' == type1:2","","",""," Analysis of rule \"Tx\" ","-----------------------","","Applicable to:","","Results:","","","",""," Analysis of rule \"TPlus\" ","--------------------------","","Applicable to:","  typingEnvironment, (eL \"+\" e)","Results:","  typingEnvironment0 \8866 (eL1:0 \"+\" : e e1:2) : e, \"Int\" : typeL","  \t where (recursion) typingEnvironment0 \8866 eL1:0, \"Int\" : typeL, typingEnvironment0 \8866 e1:2, \"Int\" : typeL","","",""," Analysis of rule \"TIf\" ","------------------------","","Applicable to:","  typingEnvironment, (\"If\" e \"Then\" e \"Else\" e)","Results:","  typingEnvironment0 \8866 (\"If\" : eL e1:1 \"Then\" : eL e1:3 \"Else\" : eL e1:5) : eL, typeTl","  \t where (recursion) typingEnvironment0 \8866 e1:1, \"Bool\" : typeL, typingEnvironment0 \8866 e1:3, typeTl, typingEnvironment0 \8866 e1:5, typeTr, typeTl == typeTr","","",""," Analysis of rule \"TLambda\" ","----------------------------","","Applicable to:","  typingEnvironment, (\"(\" \"\\\\\" var \":\" type \".\" e \")\")","Results:","  typingEnvironment0 \8866 (\"(\" : eL \"\\\\\" : eL var1:2 \":\" : eL type1:4 \".\" : eL e1:6 \")\" : eL) : eL, ((\"(\" : typeL type1:4 \")\" : typeL) : typeL \"->\" : type typeT2) : type","  \t where (recursion) ((var1:2 \":\" : typing type1:4) : typing \",\" : typingEnvironment typingEnvironment0) : typingEnvironment \8866 e1:6, typeT2","","",""," Analysis of rule \"Tapp\" ","-------------------------","","Applicable to:","  typingEnvironment, (eL e)","Results:","  typingEnvironment0 \8866 (eL1:0 e1:1) : e, type (Function call - ID not retrievable)","  \t where (recursion) typingEnvironment0 \8866 eL1:0, typeTfunc, typingEnvironment0 \8866 e1:1, typeTarg, typeTarg == type (Function call - ID not retrievable)","","",""," Analysis for rules about (\10003) ","==============================","","# (\10003) \t: e (in)\tPronounced as \"is canonical\"","","# Known rules are","#   CanonBool","#   CanonNumber","","Applicable to:","  bool","  number","Results:","  (\10003) bool0","  (\10003) number0",""," Analysis of rule \"CanonBool\" ","------------------------------","","Applicable to:","  bool","Results:","  (\10003) bool0","","",""," Analysis of rule \"CanonNumber\" ","--------------------------------","","Applicable to:","  number","Results:","  (\10003) number0","","",""," Relation analysis of STFL ","===========================","","Following new types were introduced:","  !(e)(\8594)in0 \t(derived from e)","  (e)(\8594)in0 \t(derived from e)","  !(e)(\8866)in1 \t(derived from e)","  (e)(\8866)in1 \t(derived from e)","  !(eL)(\8594)in0 \t(derived from eL)","  (eL)(\8594)in0 \t(derived from eL)","  !(eL)(\8866)in1 \t(derived from eL)","  (eL)(\8866)in1 \t(derived from eL)","  !(typeL)(==)in0 \t(derived from typeL)","  (typeL)(==)in0 \t(derived from typeL)","  !(typeL)(==)in1 \t(derived from typeL)","  (typeL)(==)in1 \t(derived from typeL)","","Following types were ommitted, as they turned out to coincide with some other type:","  ((e)(\8594)in0)(\8594*)in0 \t== (e)(\8594)in0","  ((e)(\8866)in1)(::)in0 \t== (e)(\8866)in1","  ((e)(\10003)in0)(\8594*)in0 \t== (e)(\10003)in0","  ((type)(==)in0)(==)in0 \t== (type)(==)in0","  ((type)(==)in1)(==)in1 \t== (type)(==)in1","  ((typingEnvironment)(\8866)in0)(\8866)in0 \t== (typingEnvironment)(\8866)in0","  (bool)(\8866)in1 \t== bool","  (bool)(\10003)in0 \t== bool","  (e)(::)in0 \t== (eL)(::)in0","  (e)(\8594*)in0 \t== (eL)(\8594*)in0","  (e)(\10003)in0 \t== (eL)(\10003)in0","  (eL)(::)in0 \t== (value)(::)in0","  (eL)(\8594*)in0 \t== (value)(\8594*)in0","  (eL)(\10003)in0 \t== (value)(\10003)in0","  (number)(\8866)in1 \t== number","  (number)(\10003)in0 \t== number","  (type)(==)in0 \t== type","  (type)(==)in1 \t== type","  (typingEnvironment)(\8866)in0 \t== typingEnvironment","  (value)(\8866)in1 \t== value","  (value)(\10003)in0 \t== value","","Following types were omitted, as they turned out to be empty. They might cause 'dissapearing' choices in other rules:","  (value)(::)in0","  (value)(\8594)in0","  (value)(\8594*)in0","  (bool)(::)in0","  (bool)(\8594)in0","  (bool)(\8594*)in0","  (number)(::)in0","  (number)(\8594)in0","  (number)(\8594*)in0","  (var)(::)in0","  (var)(\8594)in0","  (var)(\8594*)in0","  (var)(\8866)in1","  (var)(\10003)in0","","!(e)(\8594)in0 has following subtypes:  !(eL)(\8594)in0","!(e)(\8866)in1 has following subtypes:  !(eL)(\8866)in1","!(eL)(\8594)in0 has following subtypes:  value","  var","!(eL)(\8866)in1 has following subtypes:  var","!(typeL)(==)in0 has following subtypes:  \603","!(typeL)(==)in1 has following subtypes:  \603","(e)(\8594)in0 has following subtypes:  (eL)(\8594)in0","(e)(\8866)in1 has following subtypes:  (eL)(\8866)in1","(eL)(\8594)in0 has following subtypes:  \603","(eL)(\8866)in1 has following subtypes:  value","(typeL)(==)in0 has following subtypes:  \603","(typeL)(==)in1 has following subtypes:  \603","bool has following subtypes:  \603","e has following subtypes:  !(e)(\8594)in0","  !(e)(\8866)in1","  (e)(\8594)in0","  (e)(\8866)in1","  eL","eL has following subtypes:  !(eL)(\8594)in0","  !(eL)(\8866)in1","  (eL)(\8594)in0","  (eL)(\8866)in1","  value","  var","number has following subtypes:  \603","type has following subtypes:  typeL","typeL has following subtypes:  !(typeL)(==)in0","  !(typeL)(==)in1","  (typeL)(==)in0","  (typeL)(==)in1","  \603","typing has following subtypes:  \603","typingEnvironment has following subtypes:  \603","value has following subtypes:  bool","  number","var has following subtypes:  \603","\603 has following subtypes:",""," Resulting Syntax ","------------------","","!(e)(\8594)in0       ::= bool \"+\" !(e)(\8594)in0","                 | var \"+\" !(e)(\8594)in0","                 | \"If\" !(e)(\8594)in0 \"Then\" !(e)(\8594)in0 \"Else\" !(e)(\8594)in0 \"+\" !(e)(\8594)in0","                 | !(eL)(\8594)in0 \"+\" !(eL)(\8594)in0 \"+\" !(e)(\8594)in0","                 | !(eL)(\8594)in0 \"+\" !(eL)(\8594)in0 \"::\" type","                 | !(eL)(\8594)in0 \"+\" !(eL)(\8594)in0 !(e)(\8594)in0","                 | !(eL)(\8594)in0 \"+\" bool","                 | !(eL)(\8594)in0 \"+\" var","                 | !(eL)(\8594)in0 \"+\" \"(\" \"\\\\\" var \":\" type \".\" !(e)(\8594)in0 \")\"","                 | !(eL)(\8594)in0 \"+\" \"If\" !(e)(\8594)in0 \"Then\" !(e)(\8594)in0 \"Else\" !(e)(\8594)in0","                 | number \"::\" type","                 | var \"::\" type","                 | \"If\" !(e)(\8594)in0 \"Then\" !(e)(\8594)in0 \"Else\" !(e)(\8594)in0 \"::\" type","                 | bool \"::\" type","                 | !(eL)(\8594)in0 \"::\" type","                 | !(eL)(\8594)in0 !(e)(\8594)in0","                 | !(eL)(\8594)in0","!(e)(\8866)in1       ::= !(eL)(\8866)in1 \"+\" e","                 | eL \"+\" !(e)(\8866)in1","                 | !(eL)(\8866)in1 \"::\" type","                 | !(eL)(\8866)in1 e","                 | eL !(e)(\8866)in1","                 | !(eL)(\8866)in1","!(eL)(\8594)in0      ::= value","                 | var","                 | \"(\" \"\\\\\" var \":\" type \".\" !(e)(\8594)in0 \")\"","                 | \"If\" !(eL)(\8594)in0 \"+\" !(e)(\8594)in0 \"Then\" !(e)(\8594)in0 \"Else\" !(e)(\8594)in0","                 | \"If\" !(eL)(\8594)in0 \"::\" type \"Then\" !(e)(\8594)in0 \"Else\" !(e)(\8594)in0","                 | \"If\" !(eL)(\8594)in0 !(e)(\8594)in0 \"Then\" !(e)(\8594)in0 \"Else\" !(e)(\8594)in0","                 | \"If\" number \"Then\" !(e)(\8594)in0 \"Else\" !(e)(\8594)in0","                 | \"If\" var \"Then\" !(e)(\8594)in0 \"Else\" !(e)(\8594)in0","                 | \"If\" \"(\" \"\\\\\" var \":\" type \".\" !(e)(\8594)in0 \")\" \"Then\" !(e)(\8594)in0 \"Else\" !(e)(\8594)in0","                 | \"If\" \"If\" !(e)(\8594)in0 \"Then\" !(e)(\8594)in0 \"Else\" !(e)(\8594)in0 \"Then\" !(e)(\8594)in0 \"Else\" !(e)(\8594)in0","!(eL)(\8866)in1      ::= var","                 | \"(\" \"\\\\\" var \":\" type \".\" !(e)(\8866)in1 \")\"","                 | \"If\" !(e)(\8866)in1 \"Then\" e \"Else\" e","                 | \"If\" e \"Then\" !(e)(\8866)in1 \"Else\" e","                 | \"If\" e \"Then\" e \"Else\" !(e)(\8866)in1","                 | \"(\" !(e)(\8866)in1 \")\"","!(typeL)(==)in0  ::= \"Int\"","                 | \"Bool\"","!(typeL)(==)in1  ::= \"Int\"","                 | \"Bool\"","(e)(\8594)in0        ::= (eL)(\8594)in0","                 | (eL)(\8594)in0 e","                 | (eL)(\8594)in0 \"+\" e","                 | (eL)(\8594)in0 \"::\" type","                 | bool \"::\" \"Bool\"","                 | eL (e)(\8594)in0","                 | eL \"+\" (e)(\8594)in0","                 | eL \"::\" \"(\" type \")\"","                 | number \"+\" number","                 | number \"::\" \"Int\"","                 | \"(\" \"\\\\\" var \":\" type \".\" e \")\" e","(e)(\8866)in1        ::= (eL)(\8866)in1","                 | (eL)(\8866)in1 (e)(\8866)in1","                 | (eL)(\8866)in1 \"+\" (e)(\8866)in1","                 | (eL)(\8866)in1 \"::\" type","(eL)(\8594)in0       ::= \"(\" e \")\"","                 | \"(\" \"\\\\\" var \":\" type \".\" (e)(\8594)in0 \")\"","                 | \"If\" (e)(\8594)in0 \"Then\" e \"Else\" e","                 | \"If\" bool \"Then\" e \"Else\" e","                 | \"If\" e \"Then\" (e)(\8594)in0 \"Else\" e","                 | \"If\" e \"Then\" e \"Else\" (e)(\8594)in0","(eL)(\8866)in1       ::= value","                 | \"(\" (e)(\8866)in1 \")\"","                 | \"(\" \"\\\\\" var \":\" type \".\" (e)(\8866)in1 \")\"","                 | \"If\" (e)(\8866)in1 \"Then\" (e)(\8866)in1 \"Else\" (e)(\8866)in1","(typeL)(==)in0   ::= \"(\" type \")\"","(typeL)(==)in1   ::= \"(\" type \")\"","bool             ::= \"True\"","                 | \"False\"","e                ::= eL \"+\" e","                 | eL \"::\" type","                 | eL e","                 | eL","eL               ::= value","                 | var","                 | \"(\" \"\\\\\" var \":\" type \".\" e \")\"","                 | \"If\" e \"Then\" e \"Else\" e","                 | \"(\" e \")\"","number           ::= Number","type             ::= typeL \"->\" type","                 | typeL","typeL            ::= \"Int\"","                 | \"Bool\"","                 | \"(\" type \")\"","typing           ::= var \":\" type","typingEnvironment::= typing \",\" typingEnvironment","                 | \"{}\"","value            ::= bool","                 | number","var              ::= Identifier","","","","# Run --irasvg PATH.svg to generate a nice svg about the subtyping relationsships"]}