Output {_files = [], _stdOut = ["Warning:\n  While checking the totality of function \"cod\":\n    Following calls will fall through:\n      cod(\"Int\")\n      cod(\"Bool\")\n  While checking the totality of function \"dom\":\n    Following calls will fall through:\n      dom(\"Int\")\n      dom(\"Bool\")\n  While checking the totality of function \"eval\":\n    Following calls will fall through:\n      eval((\"(\" \"\\\\\" var \":\" type \".\" e \")\"))\n  \n  While checking that the functions do have the strictest possible types:\n    \"dom\" can be typed as \"typeL\", instead of a \"type\"","# You didn't specify an action to perform, we'll just dump the parsetrees. See -h how to run functions","# \"True\" was parsed as:","\"True\": bool.0","# \"(\\\\f : Int -> Int . f 5) (\\\\i : Int . i + 1)\" was parsed as:",": e.2\n  : eL.2\n    \"(\": eL.2\n    \"\\\\\": eL.2\n    \"f\": var.0\n    \":\": eL.2\n    : type.0\n      \"Int\": typeL.0\n      \"->\": type.0\n      \"Int\": typeL.0\n    \".\": eL.2\n    : e.2\n      \"f\": var.0\n      5: number.0\n    \")\": eL.2\n  : eL.2\n    \"(\": eL.2\n    \"\\\\\": eL.2\n    \"i\": var.0\n    \":\": eL.2\n    \"Int\": typeL.0\n    \".\": eL.2\n    : e.0\n      \"i\": var.0\n      \"+\": e.0\n      1: number.0\n    \")\": eL.2","# \"42\" was parsed as:","42: number.0","# \"1 + 2\" was parsed as:",": e.0\n  1: number.0\n  \"+\": e.0\n  2: number.0","# \"(True)\" was parsed as:",": eL.4\n  \"(\": eL.4\n  \"True\": bool.0\n  \")\": eL.4","# \"False :: Bool\" was parsed as:",": e.1\n  \"False\": bool.1\n  \"::\": e.1\n  \"Bool\": typeL.1","# \"( True )\" was parsed as:",": eL.4\n  \"(\": eL.4\n  \"True\": bool.0\n  \")\": eL.4","# \"(If True Then True Else True) :: Bool\" was parsed as:",": e.1\n  : eL.4\n    \"(\": eL.4\n    : eL.3\n      \"If\": eL.3\n      \"True\": bool.0\n      \"Then\": eL.3\n      \"True\": bool.0\n      \"Else\": eL.3\n      \"True\": bool.0\n    \")\": eL.4\n  \"::\": e.1\n  \"Bool\": typeL.1","# \"True\" was parsed as:","\"True\": bool.0","# \"(False)\" was parsed as:",": eL.4\n  \"(\": eL.4\n  \"False\": bool.1\n  \")\": eL.4","# \"True :: Bool\" was parsed as:",": e.1\n  \"True\": bool.0\n  \"::\": e.1\n  \"Bool\": typeL.1","# \"If True Then 42 Else 43\" was parsed as:",": eL.3\n  \"If\": eL.3\n  \"True\": bool.0\n  \"Then\": eL.3\n  42: number.0\n  \"Else\": eL.3\n  43: number.0","# \"If False Then 23 Else 44\" was parsed as:",": eL.3\n  \"If\": eL.3\n  \"False\": bool.1\n  \"Then\": eL.3\n  23: number.0\n  \"Else\": eL.3\n  44: number.0","# \"5 + 6\" was parsed as:",": e.0\n  5: number.0\n  \"+\": e.0\n  6: number.0","# \"5 + 6 + 7\" was parsed as:",": e.0\n  5: number.0\n  \"+\": e.0\n  : e.0\n    6: number.0\n    \"+\": e.0\n    7: number.0","# \"(\\\\x : Int . x + 1) 5\" was parsed as:",": e.2\n  : eL.2\n    \"(\": eL.2\n    \"\\\\\": eL.2\n    \"x\": var.0\n    \":\": eL.2\n    \"Int\": typeL.0\n    \".\": eL.2\n    : e.0\n      \"x\": var.0\n      \"+\": e.0\n      1: number.0\n    \")\": eL.2\n  5: number.0","# \"If (If True Then False Else True) Then 123456 Else 42\" was parsed as:",": eL.3\n  \"If\": eL.3\n  : eL.4\n    \"(\": eL.4\n    : eL.3\n      \"If\": eL.3\n      \"True\": bool.0\n      \"Then\": eL.3\n      \"False\": bool.1\n      \"Else\": eL.3\n      \"True\": bool.0\n    \")\": eL.4\n  \"Then\": eL.3\n  123456: number.0\n  \"Else\": eL.3\n  42: number.0","# \"5 + (6 + 7)\" was parsed as:",": e.0\n  5: number.0\n  \"+\": e.0\n  : eL.4\n    \"(\": eL.4\n    : e.0\n      6: number.0\n      \"+\": e.0\n      7: number.0\n    \")\": eL.4","# \"(5 + 6) + (7 + 8)\" was parsed as:",": e.0\n  : eL.4\n    \"(\": eL.4\n    : e.0\n      5: number.0\n      \"+\": e.0\n      6: number.0\n    \")\": eL.4\n  \"+\": e.0\n  : eL.4\n    \"(\": eL.4\n    : e.0\n      7: number.0\n      \"+\": e.0\n      8: number.0\n    \")\": eL.4","# \"5 + (6 + (7 + 8))\" was parsed as:",": e.0\n  5: number.0\n  \"+\": e.0\n  : eL.4\n    \"(\": eL.4\n    : e.0\n      6: number.0\n      \"+\": e.0\n      : eL.4\n        \"(\": eL.4\n        : e.0\n          7: number.0\n          \"+\": e.0\n          8: number.0\n        \")\": eL.4\n    \")\": eL.4","# \"(\\\\x : Int . x + 1) True\" was parsed as:",": e.2\n  : eL.2\n    \"(\": eL.2\n    \"\\\\\": eL.2\n    \"x\": var.0\n    \":\": eL.2\n    \"Int\": typeL.0\n    \".\": eL.2\n    : e.0\n      \"x\": var.0\n      \"+\": e.0\n      1: number.0\n    \")\": eL.2\n  \"True\": bool.0"]}