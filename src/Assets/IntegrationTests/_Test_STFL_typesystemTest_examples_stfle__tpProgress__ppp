Output {_files = [], _stdOut = ["Warning:","  While checking the totality of function \"cod\":","    Following calls will fall through:","      cod(\"Int\")","      cod(\"Bool\")","  While checking the totality of function \"dom\":","    Following calls will fall through:","      dom(\"Int\")","      dom(\"Bool\")","  While checking the totality of function \"eval\":","    Following calls will fall through:","      eval((\"(\" \"\\\\\" var \":\" type \".\" e \")\"))","  ","  While checking that the functions do have the strictest possible types:","    \"dom\" can be typed as \"typeL\", instead of a \"type\"","                                                                                "," Test/examples.stfl ","====================","","[\9608-- (0/1) Testing 'Progress' on input True","Property Progress holds for given examples                                      ","Property successfull","# Property Progress statisfied with assignment {T --> Bool, e0 --> True}","  # Predicate satisfied:","  # e0 :: T","  ","    --------------- [TboolT]","    {} \8866 True, Bool","    ------------------------ [TEmptyCtx]","    True :: Bool","  ","  ","  ","  # Satisfies a possible conclusion:","  # (\10003) e0","  ","  True : bool","  ----------- [CanonBool]","  (\10003) True","  ","  "]}