 
 STFL 
******

# A Simply Typed Functional Language

 Syntax
========

basetype::= "Bool" | "Int" | "(" type ")"
type	::= basetype "->" type | basetype

bool	::= "True" | "False"
int	::= Number
var	::= Identifier

expr	::= term "+" expr
	| term expr
	| term


term	::= "If" expr "Then" expr "Else" expr
	| "(" "\\" var ":" type "." expr ")"
	| bool
	| int
	| var
typing			::= var ":" type
typingEnvironment	::= typing "," typingEnvironment | "{}"

 Syntax Style
==============

type		-> "type"
basetype	-> "type"

Identifier	-> "identifier"
Number		-> "constant"
bool	-> "constant"
expr	-> "statement"
term.1	-> "noise"
term.0	-> "keyword"

