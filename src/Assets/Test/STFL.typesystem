
 Syntax
========

# Types
typeL	::= "Int" | "Bool" | "(" type ")"
type	::=  typeL "->" type | typeL


# builtins values
var	::= Identifier
number	::= Number
bool	::= "True" | "False"
e	::= eL "+" e | eL "::" type | eL e | eL
eL	::= number | bool | var | "(" "\\" var ":" type "." eL ")" | "If" e "Then" e "Else" e | "(" e ")"


# typing			::= var ":" type
# typingEnvironment	::= typing "," typingEnvironment | "{}"

 Functions
===========

dom 		: type -> type
dom("(" T ")")	= "(" dom(T) ")"
dom(T1 "->" T2) = T1

cod 		: type -> type
cod("(" T ")")	= "(" cod(T) ")"
cod(T1 "->" T2) = T2


equality	: type -> type -> type
equality(T , T)	= T


detectAscr	: e -> e
detectAscr(e[e0 "::" t])	= e[e0]
